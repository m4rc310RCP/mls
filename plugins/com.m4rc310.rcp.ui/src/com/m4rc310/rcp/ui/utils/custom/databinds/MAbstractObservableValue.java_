package com.m4rc310.rcp.ui.utils.custom.databinds;

import org.eclipse.core.databinding.observable.ChangeEvent;
import org.eclipse.core.databinding.observable.ObservableEvent;
import org.eclipse.core.databinding.observable.Realm;
import org.eclipse.core.databinding.observable.value.AbstractObservableValue;
import org.eclipse.core.databinding.observable.value.IObservableValue;
import org.eclipse.core.databinding.observable.value.ValueChangeEvent;
import org.eclipse.core.databinding.observable.value.ValueDiff;

public abstract class MAbstractObservableValue<T> extends AbstractObservableValue<T> implements IObservableValue<T> {
	public MAbstractObservableValue() {
		this(Realm.getDefault());
	}

	/**
	 * @param realm the realm to use; not <code>null</code>
	 */
	public MAbstractObservableValue(Realm realm) {
		super(realm);
	}

	protected void fireValueChange(ValueDiff<T> diff) {
		try {
			fireEvent(new ValueChangeEvent<>(this, diff));
			fireChange();
		} catch (Exception e) {
		}
	}
	
	@Override
	protected void fireEvent(ObservableEvent event) {
		try {
			super.fireEvent(event);
		} catch (Exception e) {
		}
	}

	protected void fireChange() {
		try {
			checkRealm();
			fireEvent(new ChangeEvent(this));
		} catch (Exception e) {
		}
	}

}
